# Функция filter

# Функция filter() применяет указанную функцию к каждому элементу итерируемого объекта и
# возвращает итератор с теми объектами, для которых функция вернула True.

# Функция filter() принимает в параметры 2 значения
# 1. Функция которую будем применять к каждому элементу объекта
# 2. Объект (список)

lst1 = [12, 15, 36, 52, 115, 84, 95, 11, 74, 55] # Создали список
res_lst = list(filter(lambda x : x % 5 == 0, lst1)) # Создаём список в котором применяем filter(lamda(условие), и передали объекл (lst1))
print(res_lst)

# Еще пример из презентации
data = [x for x in range(10)]
res = list(filter(lambda x: x % 2 == 0, data))
print(res) # [0, 2, 4, 6, 8]

# Как в данном случае работает функция filter()? Все данные, которые находятся внутри проходят
# через функцию, которая указана следующим образом:
lambda x: x % 2 == 0
# То есть делает проверка на те числа, которые при делении на 2 дают в остатке 0. Тем самым мы
# ищем только четные числа. Действительно преобразовав наши итоговые данные в список, с
# помощью функции list(), мы с Вами можем наблюдать такой красивый результат 

# Теперь мы знаем как сделать код лучше, используя map() и filter()
# Наш пример из Example_lambda
data = '1 2 3 5 8 15 23 38'.split()
res = map(int, data)
res = filter(lambda x: x % 2 == 0, res)
res = list(map(lambda x: (x, x ** 2), res))
print(res) 
