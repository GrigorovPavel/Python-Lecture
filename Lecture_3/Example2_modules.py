# Модульность

# Вы когда-нибудь задавались вопрос, как например работает функция .append
# Это же точно такая же функция, как и sumNumbers(n), но мы ее нигде не создаем,
# все дело в том что, это функция автоматически срабатывает и чтобы ей
# пользоваться ничего дополнительно писать не надо.
# Представьте себе такую ситуацию, что Вы создаете огромный проект и у Вас
# имеется большое количество функций, к примеру 5 функций работают со
# словарями, 18 со списками и тд. и у каждой функции свой алгоритм, но их
# объединяет работа с одной коллекцией данных. Согласитесь неудобно работать в
# таком большом файле, где около 80 функций, очень легко потеряться и на
# перемотку кода Вы будете терять драгоценное время. Решение данной проблемы
# есть. Давайте будем создавать отдельные файлы, где будут находиться только
# функции, и эти функции при необходимости вызывать из главного файла.


import function_file # импортировать модуль

print(function_file.max1(9, 13)) # указать модуль и функцию которую хотим вызвать и передать в неё аргументы
# ИЛИ создать переменную и ->
max_num = function_file.max1(21, 13)# указать модуль и функцию которую хотим вызвать и передать в неё аргументы 
print(max_num)

from function_file import max1 # импортировать определенную функцию
max_num = max1(21, 36) # модуль можно не указывать
print(max_num)

from function_file import * # импортировать ВСЕ! функции из этого модуля
n = f(4)
print(n)
