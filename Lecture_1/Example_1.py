num = 12
stroka = "Text !"
a = None

print(num, stroka, a)
print(type(num)) # выводит тип данных в консоль

stroka = "rty\'ytr"
print(stroka)
stroka = 'text"ТЕКСТ"text'
print(stroka)

print(f"{num} текст {a} текст {stroka}") # f- строка

'''
# Ввод данных
print("Введите текст: ")
b = input() # вводится с новой строки
print(f"вы ввели -> {b}")
c = input("Введите значение: ") # вводится в одну строку
'''

# привести значение переменной к целочисленному типу или к строчному или bool
a = 5.89
print(a)
print(type(a)) # проверяем тип данных
a = int(a)
print(a)
print(type(a)) # проверяем тип данных
a = str(a)
print(a)
print(type(a)) # проверяем тип данных

c = 1 
c = bool(c)
print(type(c))

# в функции input() данные сохроняются в виде str, если нам нужно сохранить в виде числа, используем функцию int() к функции input()
a = int(input("enter first number: "))
b = int(input("enter second number: "))
c = a + b
print(f"{a} + {b} = {c}")

# Округление чисел функция - round()

a = 3.546
b = 6.796
print(round(a * b, 3))

#  Сокращенные присваивания (арифметические операции )
iter = 2
iter += 3 # iter = iter + 3
iter -= 4 # iter = iter - 4
iter *= 5 # iter = iter * 5
iter /= 5 # iter = iter / 5
iter //= 5 # iter = iter // 5
iter %= 5 # iter = iter % 5
iter **= 5 # iter = iter ** 5 

'''
Логческие операции
>  Больше
>=  Больше или равно
<  Меньше
<=  Меньше или равно
==  Равно (проверяет, равны ли числа)
!=  Не равно (проверяет, не равны ли значения)
not  Не (отрицание)
and  И (конъюнкция)
or  Или (дизъюнкция)
'''
# Пример
a = 1 > 4
print(a) # False
# —------------------------------------
a = 1 < 4 and 5 > 2
print(a) # True
# —------------------------------------
a = 1 == 2
print(a) # False
# —------------------------------------
a = 1 != 2
print(a) # True
a = 'qwe'
b = 'qwe'
print(a == b) # True
a = 1 < 3 < 5 < 10
print (a) # True


# Управляющие конструкции if if-else elif

a = 5
b =10
c = 9
d = 4
if(a >= b):
    print(a)
else: print(b)

if(a >= b): print(a)
elif(b >= c): print(b)
elif(c >= d): print(c)
else: print(d)

if(a < b and b > c): print("Верно!")
if(a > b or b > c): print("Верно !!!")


# Цикл while 

n = 789
sum = 0
while(n > 0):
    sum += n % 10
    n //= 10
print(sum)

# Цикл while else - else будет выполнятся если цикл закончил работу самостоятельно (не с помощю break или т.д.)

i = 0
while(i < 5):
    if(i == 3): 
        break
    i += 1
else: 
    print("Пожалуй хватит!")
print(i)


#  Вместо break лучше использовать метод флажка (переменная flag)

n = int(input("Введите число: "))
flag = True
i = 2
while(flag):
    if(n % i == 0): # если остаток от деления n на i равен 0 (минимальный делитель)
        flag = False # то flag присваиваем false и цикл заканчивается
        print(i)
    elif(i > n // 2): # делитель числа не может привышать введенное число, деленное на 2
        print(n)
        flag = False
    i += 1


# Цикл for и функция range()

for i in 1, 2, 3, 4, 5:
    print(i)

# ● Range выдает значения из диапазона с шагом 1.
# ● Если указано только одно число — от 0 до заданного числа.
# ● Если нужен другой шаг, третьим аргументов можно задать приращение.
r = range(5) # 0 1 2 3 4
r = range(2, 5) # 2 3 4
r = range(-5, 0) # ----
r = range(1, 10, 2) # 1 3 5 7
r = range(100, 0, -20) # 100 80 60 40 20
r = range(100, 0, -20) # range(100, 0, -20)
for i in r:
    print(i)
# 100 80 60 40 20
for i in range(100, -1, -20):
    print(i)

# так же цшкл for можно использовать и для строк (по индексу)
a = "qwerty"
for i in a:
    print(a[0]) # выведется значение с [0] индексом - q
    print(i) # выведется поэлементно q w e r t y

# Вложеный цикл for
line = ""
for i in range(3): # если количество строк меньше 3х 
    line = ""
    for j in range(5): # добавляем * в строку, пока их (*) не станет 5, после чего переходим на новую строку
        line += "*"
    print(line)


# Использование встроеных функций для работы со строками
text = 'СъЕШЬ ещё этих МяГкИх французских булок'
print(len(text)) # 39 -позволяет узнать размер нашей строки
print('ещё' in text) # True - проверить есть ли даное слово(символ) в тексте
print(text.lower()) # съешь ещё этих мягких французских булок - переход на нижний регистр
print(text.upper()) # СЪЕШЬ ЕЩЁ ЭТИХ МЯГКИХ ФРАНЦУЗСКИХ БУЛОК - переход на верхний регистр
print(text.replace('ещё','ЕЩЁ')) # СъЕШЬ ЕЩЁ этих МяГкИх французских булок - заменить слово(символ) в тексте

# Срезы
# ● Мы представляем строку в виде массива символов. Значит мы можем обращаться к
# элементам по индексам.
# ● Отрицательное число в индексе — счёт с конца строки
text = 'съешь ещё этих мягких французских булок'
print(text[0]) # c
print(text[1]) # ъ
print(text[len(text)-1]) # к
print(text[-5]) # б
print(text[:]) # съешь ещё этих мягких французских булок
print(text[:2]) # съ
print(text[len(text)-2:]) # ок
print(text[2:9]) # ешь ещё
print(text[6:-18]) # ещё этих мягких
print(text[0:len(text):6]) # сеикакл
print(text[::6]) # сеикакл
text = text[2:9] + text[-5] + text[:2] # ...
